/*
 * Daniel Alberto Zapata Jimenez 299474

 */
package crud;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.Mongo;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Danny
 */
public class CRUD extends javax.swing.JFrame {

    DB db;
    DBCollection tabla;
    public String Coleccion = "car_details";
    public String Cambio;
    /**
     * Creates new form CRUD
     */
    public CRUD() {                         
        initComponents();              
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbCollections = new javax.swing.JComboBox<>();
        btMostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAmostrar = new javax.swing.JTextArea();
        txtVar3 = new javax.swing.JTextField();
        txtVar2 = new javax.swing.JTextField();
        txtVar4 = new javax.swing.JTextField();
        txtVar5 = new javax.swing.JTextField();
        txtVar7 = new javax.swing.JTextField();
        txtVar6 = new javax.swing.JTextField();
        txtVar1 = new javax.swing.JTextField();
        txtVar8 = new javax.swing.JTextField();
        lb1 = new javax.swing.JLabel();
        lb2 = new javax.swing.JLabel();
        lb4 = new javax.swing.JLabel();
        lb3 = new javax.swing.JLabel();
        lb5 = new javax.swing.JLabel();
        lb6 = new javax.swing.JLabel();
        lb7 = new javax.swing.JLabel();
        lb8 = new javax.swing.JLabel();
        btInsertar = new javax.swing.JButton();
        btBorrar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbCollections.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "car_details", "car_makers", "car_names", "continents", "countries", "model_details" }));
        cbCollections.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCollectionsItemStateChanged(evt);
            }
        });
        cbCollections.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCollectionsActionPerformed(evt);
            }
        });

        btMostrar.setText("Mostrar");
        btMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMostrarActionPerformed(evt);
            }
        });

        txtAmostrar.setEditable(false);
        txtAmostrar.setColumns(20);
        txtAmostrar.setRows(5);
        jScrollPane1.setViewportView(txtAmostrar);

        lb1.setText("Insertar 1:");

        lb2.setText("Insertar 2:");

        lb4.setText("Insertar 4:");

        lb3.setText("Insertar 3:");

        lb5.setText("Insertar 5:");

        lb6.setText("Insertar 6:");

        lb7.setText("Insertar 7:");

        lb8.setText("Insertar 8:");

        btInsertar.setText("Insertar");
        btInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertarActionPerformed(evt);
            }
        });

        btBorrar.setText("Borrar");
        btBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBorrarActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lb2)
                                .addGap(18, 18, 18)
                                .addComponent(txtVar2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lb1)
                                .addGap(18, 18, 18)
                                .addComponent(txtVar1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lb4)
                                    .addComponent(lb3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtVar3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVar4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lb5)
                                            .addGap(22, 22, 22))
                                        .addComponent(lb6, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lb7)
                                            .addComponent(lb8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtVar5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVar6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVar7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVar8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCollections, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btMostrar)
                                    .addComponent(btBorrar))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btEditar)
                                    .addComponent(btInsertar))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbCollections, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btMostrar)
                            .addComponent(btInsertar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btBorrar)
                            .addComponent(btEditar))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVar8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb8))
                        .addGap(0, 135, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMostrarActionPerformed
        // TODO add your handling code here:
        txtAmostrar.setText(" ");
        Cambio =  String.valueOf(cbCollections.getSelectedItem());
        Conexion(Cambio);                       
        DBCursor cursor = tabla.find();
        while (cursor.hasNext()){
            txtAmostrar.setText(txtAmostrar.getText() + "\n" + cursor.next());
        }
    }//GEN-LAST:event_btMostrarActionPerformed

    private void cbCollectionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCollectionsItemStateChanged
        // TODO add your handling code here:
        switch (cbCollections.getSelectedIndex()){
            
            case 0:
                txtVar1.setEditable(true);                
                txtVar2.setEditable(true);
                txtVar3.setEditable(true);
                txtVar4.setEditable(true);
                txtVar5.setEditable(true);
                txtVar6.setEditable(true);
                txtVar7.setEditable(true);
                txtVar8.setEditable(true);
                break;
                
            case 1:
                txtVar1.setEditable(true);
                txtVar2.setEditable(true);
                txtVar3.setEditable(true);
                txtVar4.setEditable(true);
                txtVar5.setEditable(false);
                txtVar6.setEditable(false);
                txtVar7.setEditable(false);
                txtVar8.setEditable(false);
                    
                break;
            case 2:
                txtVar1.setEditable(true);
                txtVar2.setEditable(true);
                txtVar3.setEditable(true);
                txtVar4.setEditable(false);
                txtVar5.setEditable(false);
                txtVar6.setEditable(false);
                txtVar7.setEditable(false);
                txtVar8.setEditable(false);
                
                break;
                
            case 3:
                txtVar1.setEditable(true);
                txtVar2.setEditable(true);
                txtVar3.setEditable(false);
                txtVar4.setEditable(false);
                txtVar5.setEditable(false);
                txtVar6.setEditable(false);
                txtVar7.setEditable(false);
                txtVar8.setEditable(false);
                
                    
                break;
                
            case 4:
                txtVar1.setEditable(true);
                txtVar2.setEditable(true);
                txtVar3.setEditable(true);
                txtVar4.setEditable(false);
                txtVar5.setEditable(false);
                txtVar6.setEditable(false);
                txtVar7.setEditable(false);
                txtVar8.setEditable(false);
                
                break;
                
            case 5:
                txtVar1.setEditable(true);
                txtVar2.setEditable(true);
                txtVar3.setEditable(true);
                txtVar4.setEditable(false);
                txtVar5.setEditable(false);
                txtVar6.setEditable(false);
                txtVar7.setEditable(false);
                txtVar8.setEditable(false);
                    
                break;
                
             
        }
        
        
    }//GEN-LAST:event_cbCollectionsItemStateChanged

    private void cbCollectionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCollectionsActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbCollectionsActionPerformed

    private void btInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertarActionPerformed
        // TODO add your handling code here:
        BasicDBObject documento = new BasicDBObject();
        Cambio =  String.valueOf(cbCollections.getSelectedItem());
        Conexion(Cambio);
        switch (cbCollections.getSelectedIndex()){
            
            case 0:
                documento.put("id", "'" + txtVar1.getText() + "'");
                documento.put("mpg", "'" + txtVar2.getText() + "'");
                documento.put("cylinders", "'" + txtVar3.getText() + "'");
                documento.put("edispl", "'" + txtVar4.getText() + "'");
                documento.put("horsepower", "'" + txtVar5.getText() + "'");
                documento.put("weight", "'" + txtVar6.getText() + "'");
                documento.put("accel", "'" + txtVar7.getText() + "'");
                documento.put("year", "'" + txtVar8.getText() + "'");
                break;
                
            case 1:
                documento.put("id", "'" + txtVar1.getText() + "'");
                documento.put("maker", "'" + txtVar2.getText() + "'");
                documento.put("fullname", "'" + txtVar3.getText() + "'");
                documento.put("country", "'" + txtVar4.getText() + "'");
                    
                break;
            case 2:
                documento.put("id", "'" + txtVar1.getText() + "'");
                documento.put("model", "'" + txtVar2.getText() + "'");
                documento.put("descr", "'" + txtVar3.getText() + "'");
                                
                break;
                
            case 3:
                documento.put("contid", "'" + txtVar1.getText() + "'");
                documento.put("continent", "'" + txtVar2.getText() + "'");                                                
                break;
                
            case 4:
                documento.put("countryid", "'" + txtVar1.getText() + "'");
                documento.put("countryname", "'" + txtVar2.getText() + "'");
                documento.put("continent", "'" + txtVar3.getText() + "'");               
                break;
                
            case 5:
                documento.put("modelid", "'" + txtVar1.getText() + "'");
                documento.put("maker", "'" + txtVar2.getText() + "'");
                documento.put("model", "'" + txtVar3.getText() + "'");
                    
                break;
                
             
        }
        txtVar1.setText(null);
        txtVar2.setText(null);
        txtVar3.setText(null);
        txtVar4.setText(null);
        txtVar5.setText(null);
        txtVar6.setText(null);
        txtVar7.setText(null);
        txtVar8.setText(null);

        tabla.insert(documento);
        JFrame parent = new JFrame();
        JOptionPane.showMessageDialog(parent, "Datos Enviados");
        
    }//GEN-LAST:event_btInsertarActionPerformed

    private void btBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBorrarActionPerformed
        // TODO add your handling code here:
        Cambio =  String.valueOf(cbCollections.getSelectedItem());
        Conexion(Cambio);  
        switch (cbCollections.getSelectedIndex()){
            
            case 0:
                tabla.remove(new BasicDBObject().append("id", "'" + txtVar1.getText() + "'"));
                
                break;
                
            case 1:
                tabla.remove(new BasicDBObject().append("id", "'" + txtVar1.getText() + "'"));
                    
                break;
            case 2:
               tabla.remove(new BasicDBObject().append("id", "'" + txtVar1.getText() + "'"));
                                
                break;
                
            case 3:
                tabla.remove(new BasicDBObject().append("contid", "'" + txtVar1.getText() + "'"));                                             
                break;
                
            case 4:
                tabla.remove(new BasicDBObject().append("countryid","'" + txtVar1.getText() + "'"));                   
                break;
                
            case 5:
                tabla.remove(new BasicDBObject().append("modelid", "'" + txtVar1.getText() + "'"));    
                    
                break;
                
             
        }
        txtVar1.setText(null);
        txtVar2.setText(null);
        txtVar3.setText(null);
        txtVar4.setText(null);
        txtVar5.setText(null);
        txtVar6.setText(null);
        txtVar7.setText(null);
        txtVar8.setText(null);
        JFrame parent = new JFrame();
        JOptionPane.showMessageDialog(parent, "Datos Borrados");
        
    }//GEN-LAST:event_btBorrarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:
        Cambio =  String.valueOf(cbCollections.getSelectedItem());
        Conexion(Cambio);
        switch (cbCollections.getSelectedIndex()){
            
            case 0:
                //Busca
                BasicDBObject BuscarPorId = new BasicDBObject();
                BuscarPorId.append("id", "'" + txtVar1.getText() + "'");
                        
                //Debe Remplazar
                BasicDBObject actualizarmpg = new BasicDBObject();
                actualizarmpg.append("set", new BasicDBObject().append("mpg", "'" + txtVar2.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId, actualizarmpg);
                            
                
                //Debe Remplazar
                BasicDBObject actualizarcylinders = new BasicDBObject();
                actualizarmpg.append("set", new BasicDBObject().append("cylinders", "'" + txtVar3.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId, actualizarcylinders);
                
                //Debe Remplazar
                BasicDBObject actualizaredi = new BasicDBObject();
                actualizarmpg.append("set", new BasicDBObject().append("edispl", "'" + txtVar4.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId, actualizaredi);
                
                //Debe Remplazar
                BasicDBObject actualizarhp = new BasicDBObject();
                actualizarmpg.append("set", new BasicDBObject().append("horsepower", "'" + txtVar5.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId, actualizarhp);
                
                //Debe Remplazar
                BasicDBObject weight = new BasicDBObject();
                actualizarmpg.append("set", new BasicDBObject().append("weight", "'" + txtVar6.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId, weight);
                
                //Debe Remplazar
                BasicDBObject accel = new BasicDBObject();
                actualizarmpg.append("set", new BasicDBObject().append("accel", "'" + txtVar7.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId, accel);
                
                //Debe Remplazar
                BasicDBObject year = new BasicDBObject();
                actualizarmpg.append("set", new BasicDBObject().append("year", "'" + txtVar8.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId, year);
              
                break;
                
            case 1:
                //Busca
                BasicDBObject BuscarPorId2 = new BasicDBObject();
                BuscarPorId2.append("id", "'" + txtVar1.getText() + "'");
                        
                //Debe Remplazar
                BasicDBObject maker = new BasicDBObject();
                maker.append("set", new BasicDBObject().append("maker", "'" + txtVar2.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId2, maker);
                            
                
                //Debe Remplazar
                BasicDBObject fullname = new BasicDBObject();
                fullname.append("set", new BasicDBObject().append("fullname", "'" + txtVar3.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId2, fullname);
                
                //Debe Remplazar
                BasicDBObject country = new BasicDBObject();
                country.append("set", new BasicDBObject().append("country", "'" + txtVar4.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId2, country);
                                   
                break;
            case 2:
                //Busca
                BasicDBObject BuscarPorId3 = new BasicDBObject();
                BuscarPorId3.append("id", "'" + txtVar1.getText() + "'");
                        
                //Debe Remplazar
                BasicDBObject model = new BasicDBObject();
                model.append("set", new BasicDBObject().append("model", "'" + txtVar2.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId3, model);
                            
                
                //Debe Remplazar
                BasicDBObject descr = new BasicDBObject();
                descr.append("set", new BasicDBObject().append("fullname", "'" + txtVar3.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId3, descr);
               
                                
                break;
                
            case 3:
                //Busca
                BasicDBObject BuscarPorId4 = new BasicDBObject();
                BuscarPorId4.append("contid", "'" + txtVar1.getText() + "'");
                        
                //Debe Remplazar
                BasicDBObject continent = new BasicDBObject();
                continent.append("set", new BasicDBObject().append("continent", "'" + txtVar2.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId4, continent);                                                       
                break;
                
            case 4:
                //Busca
                BasicDBObject BuscarPorId5 = new BasicDBObject();
                BuscarPorId5.append("countryid", "'" + txtVar1.getText() + "'");
                        
                //Debe Remplazar
                BasicDBObject countryname = new BasicDBObject();
                countryname.append("set", new BasicDBObject().append("countryname", "'" + txtVar2.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId5, countryname);
                            
                
                //Debe Remplazar
                BasicDBObject continent2 = new BasicDBObject();
                continent2.append("set", new BasicDBObject().append("continent", "'" + txtVar3.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId5, continent2);
                              
                break;
                
            case 5:
                 //Busca
                BasicDBObject BuscarPorId6 = new BasicDBObject();
                BuscarPorId6.append("modelid", "'" + txtVar1.getText() + "'");
                        
                //Debe Remplazar
                BasicDBObject maker2 = new BasicDBObject();
                maker2.append("set", new BasicDBObject().append("maker", "'" + txtVar2.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId6, maker2);
                            
                
                //Debe Remplazar
                BasicDBObject Model2 = new BasicDBObject();
                Model2.append("set", new BasicDBObject().append("model", "'" + txtVar3.getText() + "'"));
                
                //Actualiza
                tabla.updateMulti(BuscarPorId6, Model2);
                    
                break;
                
             
        }
        txtVar1.setText(null);
        txtVar2.setText(null);
        txtVar3.setText(null);
        txtVar4.setText(null);
        txtVar5.setText(null);
        txtVar6.setText(null);
        txtVar7.setText(null);
        txtVar8.setText(null);

        
        JFrame parent = new JFrame();
        JOptionPane.showMessageDialog(parent, "Datos Actualizados");
        
    }//GEN-LAST:event_btEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUD().setVisible(true);
            }
        });
    }
    
    public void Conexion (String Collections){
        try {
            Mongo mongo = new Mongo("localhost", 27017);
            db = mongo.getDB("AUTOSDB");
            
            
            tabla = db.getCollection(Collections);
        } catch (UnknownHostException ex) {
            Logger.getLogger(CRUD.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBorrar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btInsertar;
    private javax.swing.JButton btMostrar;
    private javax.swing.JComboBox<String> cbCollections;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb1;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel lb3;
    private javax.swing.JLabel lb4;
    private javax.swing.JLabel lb5;
    private javax.swing.JLabel lb6;
    private javax.swing.JLabel lb7;
    private javax.swing.JLabel lb8;
    private javax.swing.JTextArea txtAmostrar;
    private javax.swing.JTextField txtVar1;
    private javax.swing.JTextField txtVar2;
    private javax.swing.JTextField txtVar3;
    private javax.swing.JTextField txtVar4;
    private javax.swing.JTextField txtVar5;
    private javax.swing.JTextField txtVar6;
    private javax.swing.JTextField txtVar7;
    private javax.swing.JTextField txtVar8;
    // End of variables declaration//GEN-END:variables
}
